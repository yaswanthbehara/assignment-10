import pandas as pd
import numpy as np
from sklearn.model_selection import train_test_split
from scipy.stats import norm

data = pd.read_csv('Breast_cancer_data.csv')
X = data.drop('diagnosis', axis=1).values
y = data['diagnosis'].values

X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

summary = {}
for class_ in np.unique(y_train):
    summary[class_] = [(np.mean(feature), np.std(feature)) for feature in zip(*X_train[y_train==class_])]

def gaussian_pdf(x, mean, std):
    return norm.pdf(x, loc=mean, scale=std)

def predict(X):
    posteriors = np.zeros((X.shape[0], len(np.unique(y_train))))
    for class_ in np.unique(y_train):
        for i in range(X.shape[1]):
            mean, std = summary[class_][i]
            posteriors[:, class_] += np.log(gaussian_pdf(X[:, i], mean, std))
    return np.argmax(posteriors, axis=1)

y_pred = predict(X_test)

accuracy = np.mean(y_pred == y_test)
print(f'Accuracy: {accuracy}')
